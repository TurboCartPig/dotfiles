#!/bin/bash

# TODO: Include all the stuff
# TODO: Make idempotent

# Get name of the latest release for a given github repo
get_github_release_name () {
	name=$(curl \
		-H "Accept: application/vnd.github.v3+json" \
		"https://api.github.com/repos/$1/$2/releases/latest" \
		| jq '.name')
	echo "$name"
}

# Checkout submodules
yadm submodule update --init --recursive

# Make directories
mkdir -p ~/Projects
mkdir -p ~/.local/bin
mkdir -p ~/.config/zsh/completions/

# Set gnome settings
# shellcheck disable=2086
[ -v $DISPLAY ] && gsettings set org.freedesktop.ibus.panel.emoji hotkey '[]'

# Install cli tools
sudo dnf install -y \
	neovim zsh direnv fzf exa bat git-delta \
	fd-find ripgrep jq starship ShellCheck \
	wl-clipboard xsel xclip

# Install neovim from source
# if [ ! -d "$HOME/Projects/neovim" ]; then
# 	echo "TODO: Install neovim"
# 	git clone https://github.com/neovim/neovim ~/Projects/neovim
# fi

# Install development tools
sudo dnf install @"Development Tools" @"C Development Tools and Libraries" -y
sudo dnf remove ccache
sudo dnf install -y \
	nodejs \
	cmake ninja-build clang clang-tools-extra lldb \
	golang golang-x-tools-goimports \
	cargo rust rustfmt rust-src clippy lldb-rust \
	hadolint

# TODO: Install rustup
# TODO: Install sccache

# Install nerd-fonts
if [ ! -d "$HOME/Projects/nerd-fonts/" ]; then
	echo "Installing nerd-fonts"
	git clone https://github.com/ryanoasis/nerd-fonts ~/Projects/nerd-fonts --depth 1
	cd ~/Projects/nerd-fonts/ || exit
	./install.sh
	cd ~ || exit
fi

# Install github cli
sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
sudo dnf install -y gh
echo "Remember to login to github with 'gh auth login'"

# Setup git credential manager
# Fedora change: https://discussion.fedoraproject.org/t/attention-git-credential-libsecret-for-storing-git-passwords-in-the-gnome-keyring-is-now-an-extra-package/18275?u=rugk

# Install python tools
sudo dnf install -y poetry black python3-isort

# Install node tools
npm install --global \
	tree-sitter-cli \
	stylelint \
	markdownlint-cli \
	prettier @fsouza/prettierd \
	eslint eslint_d

# Install go tools
# TODO: Install golangci-lint
go install github.com/rhysd/actionlint/cmd/actionlint@latest

# Install language servers

## NPM based ones
npm install --global \
	typescript typescript-language-server \
	vscode-langservers-extracted \
	yaml-language-server \
	pyright

## Elm
npm install --global \
	elm elm-test elm-format elm-review \
	@elm-tooling/elm-language-server

## Rust
# Install rust-analyzer by downloading latest github release
# NOTE: This also updates rust-analyzer
curl -L https://github.com/rust-analyzer/rust-analyzer/releases/latest/download/rust-analyzer-x86_64-unknown-linux-gnu.gz \
	| gunzip -c - > ~/.local/bin/rust-analyzer
chmod +x ~/.local/bin/rust-analyzer

## Lua
# Install pre-compiled binaries from github
mkdir ~/.local/opt/lua-language-server/ || rm -rf ~/.local/opt/lua-language-server/*
latest=$(get_github_release_name "sumneko" "lua-language-server")

# shellcheck disable=2086
curl -L https://github.com/sumneko/lua-language-server/releases/latest/download/lua-language-server-${latest}-linux-x64.tar.gz \
	| tar -xzf - --directory ~/.local/opt/lua-language-server
chmod +x ~/.local/opt/lua-language-server/bin/lua-language-server

